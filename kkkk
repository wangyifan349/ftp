from flask import Flask, render_template_string, request, jsonify, send_from_directory
import os
import shutil

app = Flask(__name__)
UPLOAD_FOLDER = 'uploads'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# 确保上传目录存在
if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

# 获取指定路径的目录结构
def get_directory_structure(path):
    files = []
    for filename in os.listdir(path):
        file_path = os.path.join(path, filename)
        if os.path.isdir(file_path):
            files.append({
                'name': filename,
                'type': 'directory',
                'children': get_directory_structure(file_path)  # 递归获取子目录
            })
        else:
            files.append({'name': filename, 'type': 'file'})
    return files

# 首页，显示目录结构
@app.route('/')
def index():
    files = get_directory_structure(UPLOAD_FOLDER)
    return render_template_string("""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>公司网盘</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
        <style>
            .folder, .file {
                margin: 5px;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            .folder {
                background-color: #f8f9fa;
            }
            .file {
                background-color: #e9ecef;
            }
            .dragging {
                opacity: 0.5;
            }
            .btn-icon {
                font-size: 1.2em;
            }
        </style>
    </head>
    <body>
        <div class="container mt-4">
            <h2>公司网盘</h2>

            <!-- 上传文件 -->
            <form id="upload-form" class="mb-3" enctype="multipart/form-data">
                <div class="input-group">
                    <input type="file" class="form-control" name="file" multiple required>
                    <button class="btn btn-primary" type="submit">上传</button>
                </div>
            </form>

            <!-- 目录结构展示 -->
            <div id="file-list">
                {% for item in files %}
                    <div class="folder" data-path="{{ item.name }}">
                        <strong>{{ item.name }}</strong>
                        <div class="file-list">
                            {% for child in item.children %}
                                <div class="file" data-path="{{ child.name }}">
                                    <span>{{ child.name }}</span>
                                    <div class="float-end">
                                        <button class="btn btn-sm btn-warning rename-btn" data-path="{{ child.name }}">重命名</button>
                                        <button class="btn btn-sm btn-danger delete-btn" data-path="{{ child.name }}">删除</button>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                {% endfor %}
            </div>

        </div>

        <script>
            // 上传文件
            $('#upload-form').on('submit', function(e) {
                e.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    url: '/upload',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function(response) {
                        if (response.success) {
                            location.reload();  // 刷新页面以显示新上传的文件
                        } else {
                            alert(response.error);
                        }
                    },
                    error: function() {
                        alert('上传失败！');
                    }
                });
            });

            // 删除文件
            $(document).on('click', '.delete-btn', function() {
                var filePath = $(this).data('path');
                $.ajax({
                    url: '/delete',
                    type: 'POST',
                    data: { path: filePath },
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();  // 删除成功后刷新页面
                        } else {
                            alert(response.error);
                        }
                    }
                });
            });

            // 重命名文件或文件夹
            $(document).on('click', '.rename-btn', function() {
                var filePath = $(this).data('path');
                var newName = prompt("请输入新名称", filePath);
                if (newName) {
                    $.ajax({
                        url: '/rename',
                        type: 'POST',
                        data: { old_name: filePath, new_name: newName },
                        success: function(response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();  // 重命名成功后刷新页面
                            } else {
                                alert(response.error);
                            }
                        }
                    });
                }
            });

            // 文件夹拖拽
            var sortable = new Sortable(document.getElementById('file-list'), {
                group: 'file',
                handle: '.folder',
                animation: 150,
                onEnd: function(evt) {
                    console.log("拖拽结束");
                    var fromPath = evt.from.dataset.path;
                    var toPath = evt.to.dataset.path;
                    $.ajax({
                        url: '/move',
                        type: 'POST',
                        data: {
                            from: fromPath,
                            to: toPath
                        },
                        success: function(response) {
                            if (response.success) {
                                alert("文件或文件夹移动成功！");
                            } else {
                                alert(response.error);
                            }
                        }
                    });
                }
            });
        </script>
    </body>
    </html>
    """, files=files)

# 上传文件
@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return jsonify({"error": "No file part"})
    
    uploaded_files = []
    files = request.files.getlist('file')
    
    for file in files:
        if file.filename == '':
            continue
        file_path = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
        file.save(file_path)
        uploaded_files.append(file.filename)

    return jsonify({"success": True, "files": uploaded_files})

# 下载文件
@app.route('/download/<filename>')
def download_file(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)

# 删除文件
@app.route('/delete', methods=['POST'])
def delete_file():
    file_path = request.form.get('path')
    full_path = os.path.join(app.config['UPLOAD_FOLDER'], file_path)
    if os.path.exists(full_path):
        if os.path.isdir(full_path):
            shutil.rmtree(full_path)
        else:
            os.remove(full_path)
        return jsonify({"success": True, "message": "文件或文件夹已删除"})
    return jsonify({"error": "文件或文件夹未找到"})

# 重命名文件或文件夹
@app.route('/rename', methods=['POST'])
def rename_file():
    old_name = request.form.get('old_name')
    new_name = request.form.get('new_name')

    old_path = os.path.join(app.config['UPLOAD_FOLDER'], old_name)
    new_path = os.path.join(app.config['UPLOAD_FOLDER'], new_name)

    if os.path.exists(old_path):
        os.rename(old_path, new_path)
        return jsonify({"success": True, "message": "文件或文件夹已重命名"})
    return jsonify({"error": "文件或文件夹未找到"})

# 移动文件或文件夹
@app.route('/move', methods=['POST'])
def move_file():
    from_path = request.form.get('from')
    to_path = request.form.get('to')

    from_full_path = os.path.join(app.config['UPLOAD_FOLDER'], from_path)
    to_full_path = os.path.join(app.config['UPLOAD_FOLDER'], to_path)

    if os.path.exists(from_full_path):
        if os.path.isdir(from_full_path):
            shutil.move(from_full_path, to_full_path)
        else:
            shutil.move(from_full_path, os.path.join(to_full_path, os.path.basename(from_full_path)))
        return jsonify({"success": True, "message": "文件或文件夹已移动"})
    
    return jsonify({"error": "源路径未找到"})

if __name__ == '__main__':
    app.run(debug=True)
